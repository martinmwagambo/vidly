{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Projects\\\\vidly\\\\src\\\\components\\\\movies.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MoviesTable from \"./moviesTable\";\nimport ListGroup from \"./common/listGroup\";\nimport Pagination from \"./common/pagination\";\nimport { getMovies, deleteMovie } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport { paginate } from \"../utils/paginate\";\nimport _ from \"lodash\";\nimport SearchBox from \"./searchBox\";\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      genres: [],\n      currentPage: 1,\n      pageSize: 4,\n      searchQuery: \"\",\n      selectedGenre: null,\n      sortColumn: {\n        path: \"title\",\n        order: \"asc\"\n      }\n    };\n    this.handleDelete = movie => {\n      const movies = this.state.movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n      deleteMovie(movie._id);\n    };\n    this.handleLike = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = {\n        ...movies[index]\n      };\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n    this.handleGenreSelect = genre => {\n      this.setState({\n        selectedGenre: genre,\n        searchQuery: \"\",\n        currentPage: 1\n      });\n    };\n    this.handleSearch = query => {\n      this.setState({\n        searchQuery: query,\n        selectedGenre: null,\n        currentPage: 1\n      });\n    };\n    this.handleSort = sortColumn => {\n      this.setState({\n        sortColumn\n      });\n    };\n    this.getPagedData = () => {\n      const {\n        pageSize,\n        currentPage,\n        sortColumn,\n        selectedGenre,\n        searchQuery,\n        movies: allMovies\n      } = this.state;\n      let filtered = allMovies;\n      if (searchQuery) filtered = allMovies.filter(m => m.title.toLowerCase().startsWith(searchQuery.toLowerCase()));else if (selectedGenre && selectedGenre._id) filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\n      const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n      const movies = paginate(sorted, currentPage, pageSize);\n      return {\n        totalCount: filtered.length,\n        data: movies\n      };\n    };\n  }\n  componentDidMount() {\n    const genres = [{\n      _id: \"\",\n      name: \"All Genres\"\n    }, ...getGenres()];\n    this.setState({\n      movies: getMovies(),\n      genres\n    });\n  }\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      searchQuery\n    } = this.state;\n    if (count === 0) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, \"There are no movies in the database.\");\n    const {\n      totalCount,\n      data: movies\n    } = this.getPagedData();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      items: this.state.genres,\n      selectedItem: this.state.selectedGenre,\n      onItemSelect: this.handleGenreSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/movies/new\",\n      className: \"btn btn-primary\",\n      style: {\n        marginBottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, \"New Movie\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, \"Showing \", totalCount, \" movies in the database.\"), /*#__PURE__*/React.createElement(SearchBox, {\n      value: searchQuery,\n      onChange: this.handleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(MoviesTable, {\n      movies: movies,\n      sortColumn: sortColumn,\n      onLike: this.handleLike,\n      onDelete: this.handleDelete,\n      onSort: this.handleSort,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Pagination, {\n      itemsCount: totalCount,\n      pageSize: pageSize,\n      currentPage: currentPage,\n      onPageChange: this.handlePageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    })));\n  }\n}\nexport default Movies;","map":{"version":3,"names":["React","Component","Link","MoviesTable","ListGroup","Pagination","getMovies","deleteMovie","getGenres","paginate","_","SearchBox","Movies","constructor","args","state","movies","genres","currentPage","pageSize","searchQuery","selectedGenre","sortColumn","path","order","handleDelete","movie","filter","m","_id","setState","handleLike","index","indexOf","liked","handlePageChange","page","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","allMovies","filtered","title","toLowerCase","startsWith","sorted","orderBy","totalCount","length","data","componentDidMount","name","render","count","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","items","selectedItem","onItemSelect","to","style","marginBottom","value","onChange","onLike","onDelete","onSort","itemsCount","onPageChange"],"sources":["C:/Users/Owner/Projects/vidly/src/components/movies.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MoviesTable from \"./moviesTable\";\nimport ListGroup from \"./common/listGroup\";\nimport Pagination from \"./common/pagination\";\nimport { getMovies, deleteMovie } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport { paginate } from \"../utils/paginate\";\nimport _ from \"lodash\";\nimport SearchBox from \"./searchBox\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n    searchQuery: \"\",\n    selectedGenre: null,\n    sortColumn: { path: \"title\", order: \"asc\" }\n  };\n\n  componentDidMount() {\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...getGenres()];\n\n    this.setState({ movies: getMovies(), genres });\n  }\n\n  handleDelete = movie => {\n    const movies = this.state.movies.filter(m => m._id !== movie._id);\n    this.setState({ movies });\n\n    deleteMovie(movie._id);\n  };\n\n  handleLike = movie => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = genre => {\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n  };\n\n  handleSearch = query => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n\n  handleSort = sortColumn => {\n    this.setState({ sortColumn });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      selectedGenre,\n      searchQuery,\n      movies: allMovies\n    } = this.state;\n\n    let filtered = allMovies;\n    if (searchQuery)\n      filtered = allMovies.filter(m =>\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    else if (selectedGenre && selectedGenre._id)\n      filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\n\n    if (count === 0) return <p>There are no movies in the database.</p>;\n\n    const { totalCount, data: movies } = this.getPagedData();\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className=\"col\">\n          <Link\n            to=\"/movies/new\"\n            className=\"btn btn-primary\"\n            style={{ marginBottom: 20 }}\n          >\n            New Movie\n          </Link>\n          <p>Showing {totalCount} movies in the database.</p>\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}